{
  "version": 3,
  "sources": ["../lib/assign.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar min = require( '@stdlib/math-base-special-fast-min' );\n\n\n// MAIN //\n\n/**\n* Flattens a shape to a specified depth and assigns results to a provided output array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {NonNegativeInteger} depth - maximum depth to flatten\n* @param {Collection} out - output object\n* @returns {Collection} array shape\n*\n* @example\n* var sh = [ 0, 0 ];\n*\n* var out = flattenShape( [ 3, 2 ], 1, sh );\n* // returns [ 6 ]\n*\n* var bool = ( out === sh );\n* // returns true\n*/\nfunction flattenShape( shape, depth, out ) {\n\tvar ndims;\n\tvar d;\n\tvar s;\n\tvar i;\n\tvar j;\n\n\tndims = shape.length;\n\td = min( ndims-1, depth );\n\ts = 1;\n\tj = 0;\n\tfor ( i = 0; i < ndims; i++ ) { // e.g., shape=[2,3,4,5], depth=2 => shape=[24,5]\n\t\tif ( i <= d ) {\n\t\t\ts *= shape[ i ];\n\t\t\tif ( i === d ) {\n\t\t\t\tout[ j ] = s;\n\t\t\t\tj += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tout[ j ] = shape[ i ];\n\t\t\tj += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = flattenShape;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar min = require( '@stdlib/math-base-special-fast-min' );\nvar max = require( '@stdlib/math-base-special-fast-max' );\nvar zeros = require( '@stdlib/array-base-zeros' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\n/**\n* Flattens a shape to a specified depth.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {NonNegativeInteger} depth - maximum depth to flatten\n* @returns {NonNegativeIntegerArray} flattened shape\n*\n* @example\n* var sh = flattenShape( [ 3, 2 ], 1 );\n* // returns [ 6 ]\n*\n* sh = flattenShape( [ 3, 2, 1 ], 1 );\n* // returns [ 6, 1 ]\n*\n* sh = flattenShape( [ 3 ], 0 );\n* // returns [ 3 ]\n*\n* sh = flattenShape( [ 3, 2 ], 0 );\n* // returns [ 3, 2 ]\n*\n* sh = flattenShape( [ 3 ], 1 );\n* // returns [ 3 ]\n*\n* sh = flattenShape( [], 1 );\n* // returns []\n*/\nfunction flattenShape( shape, depth ) {\n\tvar ndims = shape.length;\n\tvar out = zeros( ndims-max( min( ndims-1, depth ), 0 ) );\n\tassign( shape, depth, out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = flattenShape;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a shape to a specified depth.\n*\n* @module @stdlib/ndarray-base-flatten-shape\n*\n* @example\n* var flattenShape = require( '@stdlib/ndarray-base-flatten-shape' );\n*\n* var sh = flattenShape( [ 3, 2 ], 1 );\n* // returns [ 6 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"assign\": \"main.assign\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,oCAAqC,EAsBxD,SAASC,EAAcC,EAAOC,EAAOC,EAAM,CAC1C,IAAIC,EACAC,EACAC,EACA,EACAC,EAMJ,IAJAH,EAAQH,EAAM,OACdI,EAAIN,EAAKK,EAAM,EAAGF,CAAM,EACxBI,EAAI,EACJC,EAAI,EACE,EAAI,EAAG,EAAIH,EAAO,IAClB,GAAKC,GACTC,GAAKL,EAAO,CAAE,EACT,IAAMI,IACVF,EAAKI,CAAE,EAAID,EACXC,GAAK,KAGNJ,EAAKI,CAAE,EAAIN,EAAO,CAAE,EACpBM,GAAK,GAGP,OAAOJ,CACR,CAKAL,EAAO,QAAUE,ICzEjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,oCAAqC,EACpDC,EAAM,QAAS,oCAAqC,EACpDC,EAAQ,QAAS,0BAA2B,EAC5CC,EAAS,IA+Bb,SAASC,EAAcC,EAAOC,EAAQ,CACrC,IAAIC,EAAQF,EAAM,OACdG,EAAMN,EAAOK,EAAMN,EAAKD,EAAKO,EAAM,EAAGD,CAAM,EAAG,CAAE,CAAE,EACvD,OAAAH,EAAQE,EAAOC,EAAOE,CAAI,EACnBA,CACR,CAKAT,EAAO,QAAUK,IChCjB,IAAIK,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAS,IAKbF,EAAaC,EAAM,SAAUC,CAAO,EAKpC,OAAO,QAAUD",
  "names": ["require_assign", "__commonJSMin", "exports", "module", "min", "flattenShape", "shape", "depth", "out", "ndims", "d", "s", "j", "require_main", "__commonJSMin", "exports", "module", "min", "max", "zeros", "assign", "flattenShape", "shape", "depth", "ndims", "out", "setReadOnly", "main", "assign"]
}
